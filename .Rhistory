options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(message=FALSE,
warning= FALSE,
fig.width=10.4,
fig.height=7)
library(tidyverse)
df <- read_tsv("speakers.csv")
results <- read_tsv("results.tsv")
correspondence <- read_tsv("correspondence.tsv")
View(results)
df <- read_tsv("speakers.csv")
correspondence <- read_tsv("correspondence.tsv")
results %>%
left_join(correspondence) %>%
left_join(df) %>%
filter(!grepl("[rlnm]", folVowel),
!grepl("[rlnm]", prevVowel)) %>%
mutate(repetition = ifelse(repetition == "--undefined--", "", repetition),
repetition = paste(context, repetition),
folVowDur = as.double(ifelse(folVowDur == "--undefined--",NA, folVowDur)),
geminate = ifelse(grepl("[ː:]", stop),"+g", "-g"),
aff_type = ifelse(grepl("[sz]", stop),"dent", NA),
aff_type = ifelse(grepl("[ʃʒšžǯ]", stop),"alv", aff_type),
aff_type = ifelse(grepl("ɬ", stop),"lat", aff_type),
aff_type = ifelse(grepl("χ", stop),"uv", aff_type),
affric = ifelse(grepl("ɬ", stop),"affricate", affric),
affric = ifelse(grepl("χ", stop),"affricate", affric),
aff_type = ifelse(grepl("χ", stop),"uv", aff_type),
aff_type = factor(aff_type, levels = c("dent", "alv", "lat", "uv")),
affric = factor(affric, levels = c("plain", "affricate")),
voice = ifelse(voice == "voiced", "+v", "-v")) %>%
mutate(fric = fric * 1000,
postfric = postfric*1000,
folVowDur = folVowDur*1000,
closdur = closdur*1000,
VOT = fric + postfric,
cd_n = closdur/folVowDur,
vot_n = VOT/folVowDur,
utterance = paste0(context, "_", repetition),
poa = factor(poa, levels = c("bilabial", "dental", "velar", "uvular")),
c_type = ifelse(glott == "glottalic", "ej", voice),
c_type = ifelse(geminate == "+g", paste0(c_type, ",", "+g"), c_type),
c_type = factor(c_type, levels = c("+v", "-v", "ej", "-v,+g", "ej,+g"))) ->
final_df
View(results)
!grepl("[rlnm]", results$folVowel)
grepl("[rlnm]", results$folVowel)
sum(!grepl("[rlnm]", results$folVowel))
results %>%
left_join(correspondence) %>%
left_join(df) %>%
filter(!grepl("[rlnm]", folVowel),
!grepl("[rlnm]", prevVowel)) %>%
mutate(repetition = ifelse(repetition == "--undefined--", "", repetition),
repetition = paste(context, repetition),
folVowDur = as.double(ifelse(folVowDur == "--undefined--",NA, folVowDur)),
geminate = ifelse(grepl("[ː:]", stop),"+g", "-g"),
aff_type = ifelse(grepl("[sz]", stop),"dent", NA),
aff_type = ifelse(grepl("[ʃʒšžǯ]", stop),"alv", aff_type),
aff_type = ifelse(grepl("ɬ", stop),"lat", aff_type),
aff_type = ifelse(grepl("χ", stop),"uv", aff_type),
affric = ifelse(grepl("ɬ", stop),"affricate", affric),
affric = ifelse(grepl("χ", stop),"affricate", affric),
aff_type = ifelse(grepl("χ", stop),"uv", aff_type),
aff_type = factor(aff_type, levels = c("dent", "alv", "lat", "uv")),
affric = factor(affric, levels = c("plain", "affricate")),
voice = ifelse(voice == "voiced", "+v", "-v")) %>%
mutate(fric = fric * 1000,
postfric = postfric*1000,
folVowDur = folVowDur*1000,
closdur = closdur*1000,
VOT = fric + postfric,
cd_n = closdur/folVowDur,
vot_n = VOT/folVowDur,
utterance = paste0(context, "_", repetition),
poa = factor(poa, levels = c("bilabial", "dental", "velar", "uvular")),
c_type = ifelse(glott == "glottalic", "ej", voice),
c_type = ifelse(geminate == "+g", paste0(c_type, ",", "+g"), c_type),
c_type = factor(c_type, levels = c("+v", "-v", "ej", "-v,+g", "ej,+g"))) ->
final_df
View(final_df)
